version: '3.8'

services:
  mongodb:
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  park-service:
    build: 
      context: ./external-services/park_service
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=mongodb://root:example@mongodb:27017/parks?authSource=admin
      - DATABASE_NAME=parks
      - REDIS_URL=redis://redis:6379
      - STRUCTURE_MANAGER_URL=http://structure-manager:8000
    ports:
      - "8001:8000"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      structure-manager:
        condition: service_started

  facility-service:
    build:
      context: ./external-services/facility_service
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=mongodb://root:example@mongodb:27017/facilities?authSource=admin
      - DATABASE_NAME=facilities
      - REDIS_URL=redis://redis:6379
      - STRUCTURE_MANAGER_URL=http://structure-manager:8000
    ports:
      - "8002:8000"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      structure-manager:
        condition: service_started

  structure-manager:
    build:
      context: ./external-services/structure_manager
      dockerfile: Dockerfile
    environment:
      - MONGODB_URI=mongodb://root:example@mongodb:27017/structure?authSource=admin
      - DATABASE_NAME=structure
      - REDIS_URL=redis://redis:6379
    ports:
      - "8003:8000"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  mongodb_data:
  redis_data: 