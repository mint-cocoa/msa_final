apiVersion: apps/v1
kind: Deployment
metadata:
  name: ride-reservation-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ride-reservation-service
  template:
    metadata:
      labels:
        app: ride-reservation-service
    spec:
      containers:
      - name: ride-reservation-service
        image: kasd0134/msa-ridereservationservice:latest
        ports:
        - containerPort: 8000
        env:
        - name: MONGODB_URI
          value: "mongodb://root:example@mongodb:27017/reservations?authSource=admin"
        - name: DATABASE_NAME
          value: "reservations"
        - name: REDIS_URL
          value: "redis://redis:6379"
        - name: REDIS_SERVICE_URL
          value: "http://redis-service:8000"
        - name: SECRET_KEY
          value: "your-secret-key"
        - name: TEST_MODE
          value: "true"
        readinessProbe:
          httpGet:
            path: /reservations/health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /reservations/health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 10
        resources:
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
      initContainers:
      - name: wait-for-redis
        image: busybox
        command: ['sh', '-c', 'until nc -z redis 6379; do echo waiting for redis; sleep 2; done;']
      - name: wait-for-redis-service
        image: busybox
        command: ['sh', '-c', 'until nc -z redis-service 8000; do echo waiting for redis-service; sleep 2; done;']
---
apiVersion: v1
kind: Service
metadata:
  name: ride-reservation-service
spec:
  selector:
    app: ride-reservation-service
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000