version: '3.8'

services:
  # Facility Service MongoDB
  mongodb-facility:
    image: mongo:latest
    container_name: mongodb-facility
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27017:27017"
    volumes:
      - mongodb_facility_data:/data/db
    networks:
      - msa_network

  # Park Service MongoDB
  mongodb-park:
    image: mongo:latest
    container_name: mongodb-park
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27018:27017"
    volumes:
      - mongodb_park_data:/data/db
    networks:
      - msa_network

  # Structure Manager MongoDB
  mongodb-structure:
    image: mongo:latest
    container_name: mongodb-structure
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27019:27017"
    volumes:
      - mongodb_structure_data:/data/db
    networks:
      - msa_network

  # Ticket Service MongoDB
  mongodb-ticket:
    image: mongo:latest
    container_name: mongodb-ticket
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - "27020:27017"
    volumes:
      - mongodb_ticket_data:/data/db
    networks:
      - msa_network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - msa_network

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - msa_network

  facility_service:
    build: 
      context: ./facility_service
      dockerfile: Dockerfile
    container_name: facility_service
    ports:
      - "8003:8000"
    environment:
      - MONGODB_URI=mongodb://root:example@mongodb-facility:27017/facilities?authSource=admin
      - DATABASE_NAME=facilities
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - mongodb-facility
      - rabbitmq
    networks:
      - msa_network

  park_service:
    build: 
      context: ./park_service
      dockerfile: Dockerfile
    container_name: park_service
    ports:
      - "8002:8000"
    environment:
      - MONGODB_URI=mongodb://root:example@mongodb-park:27017/parks?authSource=admin
      - DATABASE_NAME=parks
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - mongodb-park
      - rabbitmq
    networks:
      - msa_network

  ticket_service:
    build: 
      context: ./ticket_service
      dockerfile: Dockerfile
    container_name: ticket_service
    ports:
      - "8004:8000"
    environment:
      - MONGODB_URI=mongodb://root:example@mongodb-ticket:27017/tickets?authSource=admin
      - DATABASE_NAME=tickets
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - mongodb-ticket
      - rabbitmq
    networks:
      - msa_network

  structure_manager:
    build: 
      context: ./structure_manager
      dockerfile: Dockerfile
    container_name: structure_manager
    ports:
      - "8005:8000"
    environment:
      - MONGODB_URI=mongodb://root:example@mongodb-structure:27017/structure?authSource=admin
      - DATABASE_NAME=structure
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    depends_on:
      - mongodb-structure
      - rabbitmq
    networks:
      - msa_network

networks:
  msa_network:
    driver: bridge

volumes:
  mongodb_facility_data:
  mongodb_park_data:
  mongodb_structure_data:
  mongodb_ticket_data:
